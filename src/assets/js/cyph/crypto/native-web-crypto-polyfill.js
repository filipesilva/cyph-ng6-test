(function () {
var NativeWebCryptoPolyfill=function(r){var o={};function u(a){if(o[a]){return o[a].exports}var i=o[a]={i:a,l:false,exports:{}};r[a].call(i.exports,i,i.exports,u);i.l=true;return i.exports}u.m=r;u.c=o;u.d=function(r,o,a){if(!u.o(r,o)){Object.defineProperty(r,o,{configurable:false,enumerable:true,get:a})}};u.n=function(r){var o=r&&r.__esModule?function o(){return r["default"]}:function o(){return r};u.d(o,"a",o);return o};u.o=function(object,r){return Object.prototype.hasOwnProperty.call(object,r)};u.p="";return u(u.s=0)}([function(r,o,u){"";(function(){var r;if(self.java!==undefined&&self.java.security!==undefined&&self.java.security.SecureRandom!==undefined){var o=new java.security.SecureRandom;r=function(){return o.nextInt(256)}}else if(self.arc4random_uniform!==undefined){r=function(){return arc4random_uniform(256)}}else{throw new Error("Crypto polyfill not implemented for this platform.")}self.crypto={getRandomValues:function(o){var u=new Uint8Array(o.buffer,o.byteOffset,o.byteLength);for(var a=0;a<u.length;++a){u[a]=r()}return o},subtle:{}}})()}]);self.NativeWebCryptoPolyfill=NativeWebCryptoPolyfill;var keys=Object.keys(NativeWebCryptoPolyfill);for(var i=0;i<keys.length;++i){var key=keys[i];self[key]=NativeWebCryptoPolyfill[key]}
})();
